version: '3.8'

services:
  # Next.jsフロントエンド（開発モード）
  agent-ui:
    build:
      context: ./agent-ui
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./agent-ui:/app
      - /app/node_modules
      - /app/.next
    command: ["pnpm", "dev"]
    depends_on:
      - python-agents
      - food-cart-api
    networks:
      - app-network
    restart: unless-stopped

  # Pythonエージェント（開発モード）
  python-agents:
    build:
      context: .
      dockerfile: Dockerfile.python-agents
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app
      - AGENT_STORAGE_PATH=/app/tmp
      - PYTHONUNBUFFERED=1
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-your_google_api_key_here}
    volumes:
      - ./tmp:/app/tmp
      - ./agent.py:/app/agent.py
      - ./playground.py:/app/playground.py
      - ./agents:/app/agents
      - ./food-cart-demo/mcp_servers:/app/mcp_servers
    command: ["python", "playground.py"]
    depends_on:
      - food-cart-api
      - vending-machine-mcp
    networks:
      - app-network
    restart: unless-stopped

  # MCP Server for Vending Machine（開発モード）
  vending-machine-mcp:
    build:
      context: ./food-cart-demo
      dockerfile: Dockerfile.mcp
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./food-cart-demo/mcp_servers:/app/mcp_servers
    depends_on:
      - food-cart-api
    networks:
      - app-network
    restart: unless-stopped

  # Food Cart API（開発モード）
  food-cart-api:
    build:
      context: ./food-cart-demo
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./food-cart-demo:/app
      - ./food-cart-demo/mockdata:/app/mockdata
      - ./food-cart-demo/img:/app/img
    command: ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - app-network
    restart: unless-stopped


networks:
  app-network:
    driver: bridge

volumes:
  tmp-data:
